// Generated by CoffeeScript 1.6.3
(function() {
  describe("Featurette", function() {
    it("registers featurettes", function() {
      return expect(Featurette.registered_features["exclamation"]).toBeDefined();
    });
    it("executes features when load is run", function() {
      var element;
      Featurette.load();
      element = document.getElementsByTagName("h1")[0];
      return expect(element.innerHTML).toEqual("Exclamation!");
    });
    it("gives ids to featurettes without them", function() {
      var element;
      element = document.getElementsByTagName("h1")[0];
      return expect(element.id.indexOf("featurette-")).toEqual(0);
    });
    it("doesn't give ids to features with them", function() {
      var element;
      element = document.getElementById("so-awesome");
      return expect(element.innerHTML).toEqual("So awesome!");
    });
    describe("calling load subsequent times", function() {
      it("ignores featurettes that have already loaded", function() {
        var element, list;
        list = document.getElementById("exclamatory-list");
        list.innerHTML = "<li id=\"so-cool\" data-featurette=\"exclamation\">So cool</li>";
        Featurette.load();
        element = document.getElementsByTagName("h1")[0];
        return expect(element.innerHTML).toEqual("Exclamation!");
      });
      return it("loads unloaded featurettes", function() {
        var element;
        element = document.getElementById("so-cool");
        return expect(element.innerHTML).toEqual("So cool!");
      });
    });
    return describe("calling Featurette.load inside a featurette's constructor", function() {
      return it("doesn't make the world implode", function() {
        return expect(Featurette.get('boom')).toBeDefined();
      });
    });
  });

}).call(this);
